a)  Initially rbp is pushed to the stack and rbp and rsp have the same value.
 The rsp is moved down accordingly to the number of bytes required by the function.
 The parameters are loaded into the registers in the following order  rdi, rsi, rdx, rcx, r8, r9.
 When the function finishes ret command is called, which sets rbp and rsp to the same position and returns control to callee function.

 b) the flag is re101{y0u_4r3_g00d!!}
    running ./code7 re101{y0u_4r3_g00d!!} gives the (./code7 flag./code7) as output
 

 c) using strings code7 command , flags can be directly identified.
  /lib64/ld-linux-x86-64.so.2
U*Z|
libc.so.6
exit
printf
__libc_start_main
__gmon_start__
GLIBC_2.2.5
UH-@
AWAVA
AUATL
[]A\A]A^A_
flag = re101{y0u_4r3_g00d!!}
;*3$"
GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
crtstuff.c
__JCR_LIST__
deregister_tm_clones
__do_global_dtors_aux
completed.7594
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
code7.c
__FRAME_END__
__JCR_END__
__init_array_end
_DYNAMIC
__init_array_start
__GNU_EH_FRAME_HDR
_GLOBAL_OFFSET_TABLE_
__libc_csu_fini
_ITM_deregisterTMCloneTable
_edata
printf@@GLIBC_2.2.5
__libc_start_main@@GLIBC_2.2.5
__data_start
__gmon_start__
__dso_handle
_IO_stdin_used
__libc_csu_init
__bss_start
main
_Jv_RegisterClasses
exit@@GLIBC_2.2.5
__TMC_END__
_ITM_registerTMCloneTable
.symtab
.strtab
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got.plt
.data
.bss
.comment
 